/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SimulatorImport } from './routes/simulator'
import { Route as GameImport } from './routes/_game'
import { Route as GameIndexImport } from './routes/_game/index'
import { Route as GameShopImport } from './routes/_game/shop'
import { Route as GameSettingsImport } from './routes/_game/settings'
import { Route as GameQuestsImport } from './routes/_game/quests'
import { Route as GameProfileImport } from './routes/_game/profile'

// Create/Update Routes

const SimulatorRoute = SimulatorImport.update({
  id: '/simulator',
  path: '/simulator',
  getParentRoute: () => rootRoute,
} as any)

const GameRoute = GameImport.update({
  id: '/_game',
  getParentRoute: () => rootRoute,
} as any)

const GameIndexRoute = GameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => GameRoute,
} as any)

const GameShopRoute = GameShopImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => GameRoute,
} as any)

const GameSettingsRoute = GameSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => GameRoute,
} as any)

const GameQuestsRoute = GameQuestsImport.update({
  id: '/quests',
  path: '/quests',
  getParentRoute: () => GameRoute,
} as any)

const GameProfileRoute = GameProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => GameRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_game': {
      id: '/_game'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GameImport
      parentRoute: typeof rootRoute
    }
    '/simulator': {
      id: '/simulator'
      path: '/simulator'
      fullPath: '/simulator'
      preLoaderRoute: typeof SimulatorImport
      parentRoute: typeof rootRoute
    }
    '/_game/profile': {
      id: '/_game/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof GameProfileImport
      parentRoute: typeof GameImport
    }
    '/_game/quests': {
      id: '/_game/quests'
      path: '/quests'
      fullPath: '/quests'
      preLoaderRoute: typeof GameQuestsImport
      parentRoute: typeof GameImport
    }
    '/_game/settings': {
      id: '/_game/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof GameSettingsImport
      parentRoute: typeof GameImport
    }
    '/_game/shop': {
      id: '/_game/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof GameShopImport
      parentRoute: typeof GameImport
    }
    '/_game/': {
      id: '/_game/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof GameIndexImport
      parentRoute: typeof GameImport
    }
  }
}

// Create and export the route tree

interface GameRouteChildren {
  GameProfileRoute: typeof GameProfileRoute
  GameQuestsRoute: typeof GameQuestsRoute
  GameSettingsRoute: typeof GameSettingsRoute
  GameShopRoute: typeof GameShopRoute
  GameIndexRoute: typeof GameIndexRoute
}

const GameRouteChildren: GameRouteChildren = {
  GameProfileRoute: GameProfileRoute,
  GameQuestsRoute: GameQuestsRoute,
  GameSettingsRoute: GameSettingsRoute,
  GameShopRoute: GameShopRoute,
  GameIndexRoute: GameIndexRoute,
}

const GameRouteWithChildren = GameRoute._addFileChildren(GameRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof GameRouteWithChildren
  '/simulator': typeof SimulatorRoute
  '/profile': typeof GameProfileRoute
  '/quests': typeof GameQuestsRoute
  '/settings': typeof GameSettingsRoute
  '/shop': typeof GameShopRoute
  '/': typeof GameIndexRoute
}

export interface FileRoutesByTo {
  '/simulator': typeof SimulatorRoute
  '/profile': typeof GameProfileRoute
  '/quests': typeof GameQuestsRoute
  '/settings': typeof GameSettingsRoute
  '/shop': typeof GameShopRoute
  '/': typeof GameIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_game': typeof GameRouteWithChildren
  '/simulator': typeof SimulatorRoute
  '/_game/profile': typeof GameProfileRoute
  '/_game/quests': typeof GameQuestsRoute
  '/_game/settings': typeof GameSettingsRoute
  '/_game/shop': typeof GameShopRoute
  '/_game/': typeof GameIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/simulator'
    | '/profile'
    | '/quests'
    | '/settings'
    | '/shop'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/simulator' | '/profile' | '/quests' | '/settings' | '/shop' | '/'
  id:
    | '__root__'
    | '/_game'
    | '/simulator'
    | '/_game/profile'
    | '/_game/quests'
    | '/_game/settings'
    | '/_game/shop'
    | '/_game/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  GameRoute: typeof GameRouteWithChildren
  SimulatorRoute: typeof SimulatorRoute
}

const rootRouteChildren: RootRouteChildren = {
  GameRoute: GameRouteWithChildren,
  SimulatorRoute: SimulatorRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_game",
        "/simulator"
      ]
    },
    "/_game": {
      "filePath": "_game.tsx",
      "children": [
        "/_game/profile",
        "/_game/quests",
        "/_game/settings",
        "/_game/shop",
        "/_game/"
      ]
    },
    "/simulator": {
      "filePath": "simulator.tsx"
    },
    "/_game/profile": {
      "filePath": "_game/profile.tsx",
      "parent": "/_game"
    },
    "/_game/quests": {
      "filePath": "_game/quests.tsx",
      "parent": "/_game"
    },
    "/_game/settings": {
      "filePath": "_game/settings.tsx",
      "parent": "/_game"
    },
    "/_game/shop": {
      "filePath": "_game/shop.tsx",
      "parent": "/_game"
    },
    "/_game/": {
      "filePath": "_game/index.tsx",
      "parent": "/_game"
    }
  }
}
ROUTE_MANIFEST_END */
